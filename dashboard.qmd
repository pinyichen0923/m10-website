---
title: "IMDb Top 250 Movie Dashboard"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
    theme: cosmo
runtime: shiny  
---

```{r setup, include=FALSE}
# import library
library(tidyverse)
library(reactable)
library(flexdashboard)
library(rvest)
library(stringr)
```

```{r data-prep}

# web scraping
url <- "https://www.imdb.com/chart/top/?ref_=nv_mv_250"

raw_script <- read_html(url) |>
  html_element("script#__NEXT_DATA__") |>  # Escape the id selector
  html_text()

top_movies <- str_match_all(raw_script, '"titleText":\\{"text":"(.*?)"')[[1]][,2]
year <- str_match_all(raw_script, '"releaseYear":\\{"year":(\\d{4})')[[1]][,2]
rating <- str_match_all(raw_script, '"aggregateRating":(\\d+(\\.\\d+)?)')[[1]][,2]

# Create as a dataframe
top250_movies <- tibble::tibble(
  title = top_movies,
  year = as.integer(year),
  rating = as.numeric(rating)
) |> 
  arrange(desc(rating))  
```

## **🎬 Overview**

This dashboard visualizes the IMDb Top 250 movies, showing trends in ratings and allowing interactive exploration by year.

## 🏆 Highlights {.value-box}

```{r}
valueBox(
  value = top250_movies$title[1],
  caption = paste0("Highest Rating: ", top250_movies$rating[1]),
  icon = "fa-film",
  color = "primary"
)
valueBox(
  value = min(top250_movies$year, na.rm = TRUE),
  caption = "Oldest Movie Release Year",
  icon = "fa-hourglass-start",
  color = "info"
)
valueBox(
  value = max(top250_movies$year, na.rm = TRUE),
  caption = "Newest Movie Release Year",
  icon = "fa-calendar-check",
  color = "success"
)
```

## **📈 Rating Distribution**

```{r}
ggplot(top250_movies, aes(x = rating)) +
  geom_histogram(bins = 20, fill = "steelblue", color = "white") +
  labs(title = "Distribution of IMDb Ratings", x = "Rating", y = "Count")
```

## **📊 Number of Top Movies by Year**

```{r}
top250_movies |>
  count(year) |>
  ggplot(aes(x = year, y = n)) +
  geom_col(fill = "coral") +
  labs(title = "Number of Top Movies by Release Year", x = "Year", y = "Number of Movies") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## **🔍 Movie Search**

```{r}
reactable(
  top250_movies,
  searchable = TRUE,
  filterable = TRUE,
  defaultPageSize = 10,
  columns = list(
    title = colDef(name = "Movie Title"),
    year = colDef(name = "Year"),
    rating = colDef(name = "Rating", format = colFormat(digits = 1))
  )
)
```

------------------------------------------------------------------------

## 🏆 Key Highlights

::: callout-note
### 🎬 Highest Rated Movie

**`r top250_movies$title[1]`** with a rating of **`r top250_movies$rating[1]`**
:::

::: callout-tip
### 🕰️ Oldest Movie

Released in **`r min(top250_movies$year, na.rm = TRUE)`**
:::

::: callout-important
### 🆕 Newest Movie

Released in **`r max(top250_movies$year, na.rm = TRUE)`**
:::

------------------------------------------------------------------------
